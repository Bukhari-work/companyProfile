---
import Main from "@/layouts/Main.astro";
import { getSinglePage } from "@/lib/contentParser.astro";
import type { CollectionEntry } from "astro:content";

import SideBar from "@/components/SideBar.astro";
import PeopleDeck from "@/components/PeopleDeck.astro";

import {
  advisors as advisorsIndex,
  leadership as leadershipIndex,
  teamMembers as teamMembersIndex,
} from "@/config.json";

const PEOPLE_FOLDER = "people";

// Fetch all entries from the 'people' collection
const people: CollectionEntry<"people">[] = await getSinglePage(PEOPLE_FOLDER);

// Filter people into their respective roles
const advisors = people.filter((person) => person.data.role === "Advisors");
const leadership = people.filter((person) => person.data.role === "Leadership");
const teamMembers = people.filter((person) => person.data.role === "The Team");

/**
 * A reusable function to sort a list of people based on a predefined index array of objects.
 * It uses the 'index' property from the object whose 'slug' matches the person's slug.
 * @param peopleArray The array of people entries to sort.
 * @param indexArray The array of objects { index: number, slug: string } from config.json.
 */
const sortPeopleByIndex = (
  peopleArray: CollectionEntry<"people">[],
  indexArray: { index: number; slug: string }[],
) => {
  // Create a Map for efficient lookups: { slug => index }
  // e.g., { "john-doe": 0, "jane-smith": 1 }
  const slugToIndexMap = new Map(
    indexArray.map((item) => [item.slug, item.index]),
  );

  return peopleArray.sort((a, b) => {
    // Get the predefined sort index from the map
    const aIndex = slugToIndexMap.get(a.id);
    const bIndex = slugToIndexMap.get(b.id);

    // If a person isn't in the index map, put them at the end
    if (aIndex === undefined) return 1;
    if (bIndex === undefined) return -1;

    // Sort based on the 'index' property from the config file
    return aIndex - bIndex;
  });
};

// Sort all three groups based on the order defined in config.json
const sortedAdvisors = sortPeopleByIndex(advisors, advisorsIndex);
const sortedLeadership = sortPeopleByIndex(leadership, leadershipIndex);
const sortedTeamMembers = sortPeopleByIndex(teamMembers, teamMembersIndex);

// Attributes for the Main layout
const content = { title: "About Us - Team" };
---

<Main content={content}>
  <section class="mx-auto grid max-w-7xl grid-cols-14 gap-6 p-2 pb-24">
    <SideBar className="col-span-10 lg:col-span-2" />
    <article
      class="prose dark:prose-invert col-span-10 min-w-full text-justify font-light lg:col-span-11"
    >
      <h1
        class="font-lexend text-primary mt-0 mb-2 w-fit scroll-mt-24 text-6xl font-semibold lg:mt-8"
      >
        THE TEAM
      </h1>
      <div class="w-full">
        <div>
          <h2 class="text-3xl">Advisors</h2>
          <div class="not-prose">
            <PeopleDeck people={sortedAdvisors} />
          </div>
          <h2 class="text-3xl">Leadership</h2>
          <div class="not-prose">
            <PeopleDeck people={sortedLeadership} />
          </div>
          <h2 class="text-3xl">Our Team</h2>
          <div class="not-prose mb-24">
            <PeopleDeck people={sortedTeamMembers} />
          </div>
        </div>
      </div>
    </article>
  </section>
</Main>
