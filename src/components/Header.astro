---
import Logo from "@/components/blocks/Logo.astro";
import ThemeToggle from "@/components/blocks/ThemeToggle.astro";
import config from "@/config.json";
import NavDrawer from "@/components/blocks/NavDrawer.astro";
import Button from "@/components/ui-astro/Button.astro";
import { Image } from "astro:assets";
import type { HTMLAttributes } from "astro/types";

interface NavigationLink extends HTMLAttributes<"a"> {
  text: string;
  hasChildren?: boolean;
  children?: HTMLAttributes<"a">[];
}

interface SubLink extends HTMLAttributes<"a"> {
  text: string;
}

const {
  mainMenu,
  aboutMenu,
  whatWeDoMenu,
}: {
  mainMenu: NavigationLink[];
  aboutMenu: SubLink[];
  whatWeDoMenu: SubLink[];
} = config.menu;

const { pathname } = Astro.url;
---

<header
  id="site-header"
  class="bg-background/90 fixed top-0 z-30 w-screen backdrop-blur-sm"
>
  <div class="relative mx-3 flex h-full grow md:mx-8 lg:mx-12">
    <nav
      aria-label="Main navigation"
      class="mx-auto flex w-full items-center justify-between px-3 md:max-w-7xl md:px-6"
    >
      <!-- Logo -->
      <a href="/">
        <Image
          src="/images/Logo-landscape-black.png"
          alt="Company Logo"
          width={150}
          height={150}
          class="hidden p-2 transition-transform duration-300 hover:scale-105 dark:block"
        />

        <Image
          src="/images/Logo-landscape-white.png"
          alt="Company Logo"
          width={150}
          height={150}
          class="p-2 transition-transform duration-300 hover:scale-105 dark:hidden"
        />
      </a>
      <!-- Desktop Menu -->
      <div id="desktop-menu" class="hidden lg:flex">
        <ul
          id="navigation"
          class="inline-flex w-auto flex-wrap justify-center space-x-1 self-center px-5 text-center text-sm"
        >
          {
            mainMenu.map((menu) => (
              <li>
                <a
                  href={menu.href}
                  class={`text-foreground/80 group hover:bg-primary/12 relative block gap-10 rounded-xl px-4 py-3 ${
                    ((menu.href &&
                      (menu.href === "/"
                        ? pathname === "/"
                        : pathname.startsWith(menu.href.toString()))) ||
                      (menu.text === "About Us" &&
                        aboutMenu.some((about) => about.href === pathname))) &&
                    "text-primary/80 bg-primary/12"
                  }`}
                  aria-current={
                    pathname === `${menu.href}/` || pathname === menu.href
                      ? "page"
                      : undefined
                  }
                >
                  {menu.text}
                </a>
              </li>
            ))
          }
        </ul>

        <Button
          size="default"
          className="bg-primary/80 my-auto mr-5 transition-colors duration-800"
          href="/project">Latest Program</Button
        >

        <ThemeToggle className="self-center" />
      </div>

      <!-- Mobile Menu -->
      <div id="mobile-menu" class="lg:hidden">
        <Button
          size="sm"
          className="bg-primary/60 mr-2 align-middle transition-colors duration-800"
          href="/project">Latest Program!</Button
        >
        <Button
          icon="LuMenu"
          variant="outline"
          size="sm"
          data-aw-show-nav
          className="align-middle"
        />
      </div>
    </nav>

    <!-- Dot accessories -->
    <div
      class="bg-background border-primary absolute -bottom-1 -left-1 z-10 h-2 w-2 rotate-45 border"
    >
    </div>
    <div
      class="bg-background border-primary absolute -right-1 -bottom-1 z-10 h-2 w-2 rotate-45 border"
    >
    </div>
  </div>

  <script is:inline>
    document.addEventListener("astro:after-swap", () => {});
  </script>
</header>

<NavDrawer />

<script is:inline>
  const addBorder = () => {
    const header = document.getElementById("site-header");
    if (header) {
      const scrollThreshold = 50; // Adjust this value as needed
      window.addEventListener("scroll", () => {
        if (window.scrollY > scrollThreshold) {
          header.classList.add("border-b");
        } else {
          header.classList.remove("border-b");
        }
      });
    }
  };

  window.addEventListener("load", addBorder);
  document.addEventListener("astro:after-swap", addBorder);
</script>
