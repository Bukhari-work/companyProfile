---
import Logo from "@/components/blocks/Logo.astro";
import ThemeToggle from "@/components/blocks/ThemeToggle.astro";
import config from "@/config.json";
import { cn } from "@/lib/utils";
import NavDrawer from "@/components/blocks/NavDrawer.astro";
import Button from "@/components/ui-astro/Button.astro";
import type { HTMLAttributes } from "astro/types";

interface NavigationLink extends HTMLAttributes<"a"> {
  text: string;
  hasChildren?: boolean;
  children?: HTMLAttributes<"a">[];
}

interface AboutLink extends HTMLAttributes<"a"> {
  text: string;
}

const {
  mainMenu,
  aboutMenu,
}: { mainMenu: NavigationLink[]; aboutMenu: AboutLink[] } = config.menu;

const { pathname } = Astro.url;
---

<header
  id="site-header"
  class="bg-background/90 fixed top-0 z-30 w-screen backdrop-blur-sm"
>
  <div class="relative mx-3 flex h-full grow md:mx-8 lg:mx-12">
    <nav
      aria-label="Main navigation"
      class="mx-auto flex w-full items-center justify-between px-3 md:max-w-5xl md:px-6"
    >
      <!-- Logo -->
      <Logo
        loading="eager"
        className="p-2 transition-transform duration-300 hover:scale-105"
        size="sm"
      />

      <!-- Desktop Menu -->
      <div id="desktop-menu" class="hidden lg:flex">
        <ul
          id="navigation"
          class="inline-flex w-auto flex-wrap justify-center space-x-4 self-center px-5 text-center text-sm"
        >
          {
            mainMenu.map((menu) => (
              <li>
                <a
                  href={menu.href}
                  class={`group relative block px-2 py-3 ${
                    (pathname === `${menu.href}/` ||
                      pathname === menu.href ||
                      (menu.text === "About Us" &&
                        aboutMenu.some((about) => about.href === pathname))) &&
                    "text-ungu dark:text-kuning"
                  }`}
                  aria-current={
                    pathname === `${menu.href}/` || pathname === menu.href
                      ? "page"
                      : undefined
                  }
                >
                  {menu.text}
                  <span
                    class={cn(
                      `bg-primary absolute bottom-1 left-0 h-0.5 w-full origin-center scale-x-0 transform transition-transform duration-200 ease-out group-hover:scale-x-100 ${
                        (pathname === `${menu.href}/` ||
                          pathname === menu.href ||
                          (menu.text === "About Us" &&
                            aboutMenu.some(
                              (about) => about.href === pathname,
                            ))) &&
                        "bg-primary scale-x-100"
                      }`,
                    )}
                  />
                </a>
              </li>
            ))
          }
        </ul>
        <ThemeToggle className="self-center" />
      </div>

      <!-- Mobile Menu -->
      <div id="mobile-menu" class="lg:hidden">
        <Button icon="LuMenu" variant="outline" size="sm" data-aw-show-nav />
      </div>
    </nav>

    <!-- Dot accessories -->
    <div
      class="bg-background border-primary absolute -bottom-1 -left-1 z-10 h-2 w-2 rotate-45 border"
    >
    </div>
    <div
      class="bg-background border-primary absolute -right-1 -bottom-1 z-10 h-2 w-2 rotate-45 border"
    >
    </div>
  </div>

  <script is:inline>
    document.addEventListener("astro:after-swap", () => {});
  </script>
</header>

<NavDrawer />

<script is:inline>
  const addBorder = () => {
    const header = document.getElementById("site-header");
    if (header) {
      const scrollThreshold = 50; // Adjust this value as needed
      window.addEventListener("scroll", () => {
        if (window.scrollY > scrollThreshold) {
          header.classList.add("border-b");
        } else {
          header.classList.remove("border-b");
        }
      });
    }
  };

  window.addEventListener("load", addBorder);
  document.addEventListener("astro:after-swap", addBorder);
</script>
