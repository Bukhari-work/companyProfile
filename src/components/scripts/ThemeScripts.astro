---
import config from "@/config.json";
---

<script is:inline define:vars={{ defaultTheme: config.settings.default_theme }}>
  if (window.basic_script) {
    return;
  }

  window.basic_script = true;

  function applyTheme(theme) {
    document.documentElement.classList.toggle("dark", theme === "dark");
  }

  function initTheme() {
    const isSystemDark = window.matchMedia(
      "(prefers-color-scheme: dark)",
    ).matches;
    let theme;
    if (
      (defaultTheme && defaultTheme.endsWith(":only")) ||
      (!localStorage.theme && defaultTheme !== "system")
    ) {
      theme = defaultTheme.replace(":only", "");
    } else if (
      localStorage.theme === "dark" ||
      (!localStorage.theme && isSystemDark)
    ) {
      theme = "dark";
    } else {
      theme = "light";
    }
    applyTheme(theme);
  }

  let toggleButtons = [];
  function cacheToggleButtons() {
    toggleButtons = Array.from(
      document.querySelectorAll("[data-aw-toggle-color-scheme]"),
    );
  }
  function attachToggleHandlers() {
    toggleButtons.forEach((btn) => {
      btn.addEventListener(
        "click",
        () => {
          if (defaultTheme.endsWith(":only")) return;
          requestAnimationFrame(() => {
            const isDark = document.documentElement.classList.toggle("dark");
            localStorage.theme = isDark ? "dark" : "light";
          });
        },
        { passive: true },
      );
    });
  }

  const onLoad = () => {
    cacheToggleButtons();
    attachToggleHandlers();
  };

  initTheme();
  window.onload = onLoad;
  document.addEventListener("astro:after-swap", () => {
    initTheme();
    onLoad();
  });
</script>
