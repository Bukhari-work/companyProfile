---
export interface Author {
  name: string;
  avatarUrl: string;
}

export interface Tag {
  name: string;
}

export interface Post {
  href: string;
  title: string;
  authors: Author[];
  tags: Tag[];
  date: string;
}

export interface Category {
  name: string;
  href: string;
}

interface Props {
  posts: Post[];
  categories: Category[];
  activeCategory?: string;
}

const { posts, categories, activeCategory = "All Posts" } = Astro.props;
---

<!-- Blog Post List -->
<div class="relative w-full gap-6 lg:gap-16 lg:pt-10">
  {
    posts.map((post, index) => {
      const patternId = `pattern-${index}`;
      return (
        <a
          class="group hover:border-primary hover:bg-primary/10 relative isolate flex flex-col items-start justify-between gap-2 rounded border border-transparent p-2 hover:[box-shadow:_var(--sh-alt)] lg:min-h-[42px] lg:flex-row lg:items-center"
          href={post.href}
        >
          {/* SVG background pattern on hover */}
          <svg class="text-primary pointer-events-none invisible absolute inset-0 [z-index:-1] size-full [mask-image:linear-gradient(to_left,_#ffffffad,_transparent)] opacity-100 select-none group-hover:visible dark:opacity-80">
            <defs>
              <pattern
                id={patternId}
                width="4"
                height="4"
                patternUnits="userSpaceOnUse"
                patternTransform="rotate(45)"
              >
                <line
                  x1="0"
                  y1="0"
                  x2="0"
                  y2="4"
                  stroke="currentColor"
                  stroke-width="1.5"
                />
              </pattern>
            </defs>
            <rect width="100%" height="100%" fill={`url(#${patternId})`} />
          </svg>
          {/* Post Title and Authors */}
          <div class="flex shrink-0 flex-col items-start gap-2 lg:flex-row lg:items-center">
            <h2 class="group-hover:text-primary decoration-foreground/20 dark:decoration-foreground/40 group-hover:decoration-primary dark:group-hover:decoration-primary underline underline-offset-2">
              {post.title}
            </h2>
            {post.authors.length > 0 && (
              <div class="hidden -space-x-1.5 hover:space-x-2 lg:flex">
                {post.authors.map((author) => (
                  <div class="relative isolate [transition:_margin_150ms]">
                    <img
                      alt={author.name}
                      loading="lazy"
                      width="20"
                      height="20"
                      class="size-5 shrink-0 cursor-help overflow-hidden rounded-full"
                      src={author.avatarUrl}
                    />
                  </div>
                ))}
              </div>
            )}
          </div>
          <hr class="hidden w-full opacity-80 group-hover:invisible lg:flex" />
          {/* Tags and Date */}
          <div class="flex w-full shrink-0 items-center gap-1 lg:w-fit">
            {post.authors.length > 0 && (
              <div class="flex -space-x-1.5 lg:hidden">
                {post.authors.map((author) => (
                  <div class="relative isolate [transition:_margin_150ms]">
                    <img
                      alt={author.name}
                      loading="lazy"
                      width="20"
                      height="20"
                      class="size-5 shrink-0 cursor-help overflow-hidden rounded-full"
                      src={author.avatarUrl}
                    />
                  </div>
                ))}
              </div>
            )}
            {post.authors.length > 0 && (
              <span class="flex opacity-15 lg:hidden">|</span>
            )}

            {post.tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {post.tags.map((tag) => (
                  <div class="text-primary border-primary bg-primary/5 flex h-[18px] w-fit shrink-0 items-center gap-1.5 rounded-xs border border-dotted px-1 font-mono text-[0.625rem] leading-6">
                    {tag.name}
                  </div>
                ))}
              </div>
            )}

            {post.tags.length > 0 && (
              <span class="hidden opacity-15 lg:flex">|</span>
            )}

            <p class="ml-auto font-mono text-xs">{post.date}</p>
          </div>
          <hr class="default-border-color flex w-full opacity-60 group-hover:invisible lg:hidden dark:opacity-40" />
        </a>
      );
    })
  }
</div>
