---
import ComponentWrapper from "@/components/blocks/ComponentWrapper.astro";
import Headline from "@/components/ui-astro/Headline.astro";
import ItemGrid from "@/components/ui-astro/ItemGrid.astro";
import { Image } from "astro:assets";
import type { Features as Props } from "@/types.d.ts";

const {
  title = await Astro.slots.render("title"),
  subtitle = await Astro.slots.render("subtitle"),
  tagline = await Astro.slots.render("tagline"),
  image,
  items = [],
  columns,
  defaultIcon,
  isBeforeContent,
  isAfterContent,

  id,
  classes = {},
  bg = await Astro.slots.render("bg"),
} = Astro.props;
---

<ComponentWrapper
  id={id}
  containerClass={`max-w-5xl ${isBeforeContent ? "md:pb-8 lg:pb-12" : ""} ${isAfterContent ? "pt-0 md:pt-0 lg:pt-0" : ""} ${
    classes?.container ?? ""
  }`}
  bg={bg}
>
  <Headline
    title={title}
    subtitle={subtitle}
    tagline={tagline}
    classes={classes?.headline as Record<string, string>}
  />

  <div aria-hidden="true" class="aspect-w-16 aspect-h-7">
    {
      image && (
        <Image
          {...image}
          class="mx-auto h-80 w-full rounded-xl object-cover shadow-lg"
        />
      )
    }
  </div>

  <ItemGrid
    items={items}
    columns={columns}
    defaultIcon={defaultIcon}
    classes={{
      container: "mt-12",
      panel: "max-w-full sm:max-w-md",
      title: "text-lg font-semibold",
      description: "mt-0.5",
      icon: "flex-shrink-0 mt-1 text-primary w-6 h-6",
      ...((classes?.items as object) ?? {}),
    }}
  />
</ComponentWrapper>
